{"version":3,"sources":["PeekCardNode.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["const { ccclass, property } = cc._decorator;\n/**\n * 搓牌类\n *\n * @export\n * @class PokerCard\n * @extends {cc.Node}\n * @example\n * var peekCardNode = new PeekCardNode();\n * parent.addChild(peekCardNode)\n * peekCardNode.setCardSize(cc.size(250, 330))\n * peekCardNode.setCardBack(\"Cards/Cards051\");\n * peekCardNode.setCardFace(\"Cards/Cards000\");\n * peekCardNode.setShadow(\"shadow\");\n * peekCardNode.setFinger(\"HelloWorld\", 1);\n * peekCardNode.setFinger(\"HelloWorld\", 2);\n * \n * peekCardNode.init();\n */\n@ccclass\nexport default class PeekCardNode extends cc.Node {\n    mask: cc.Mask = undefined;      //总遮罩\n    back: cc.Sprite = undefined;    //牌背\n    face: cc.Sprite = undefined;    //牌面\n    faceMask: cc.Mask = undefined;  //牌面遮罩\n    shadow: cc.Sprite = undefined;  //牌面阴影\n\n    finger1: cc.Sprite = undefined;  //手指1\n    finger2: cc.Sprite = undefined;  //手指2\n\n    _cardSize: cc.Size = undefined;\n    //触摸事件\n    _tStartPos: cc.Vec2 = undefined;\n    _moveDirection: cc.Vec2 = undefined;\n    _rotation: number = 0;\n    _isOpenCard: boolean = false;\n    _isMoveStart: boolean = false;\n    /**\n     * 手指被使用数组\n     * 数组下标与顶点下标一致 表示该顶点正在被该手指遮住\n     */\n    _infinger: cc.Sprite[] = [];\n    // _isOver: boolean = false\n    constructor() {\n        super(\"PeekCardNode\");\n        this.setContentSize(1280, 720)  //默认大小\n\n        this.mask = new cc.Node().addComponent(cc.Mask);\n        this.addChild(this.mask.node);\n        //添加牌背牌面\n        this.back = new cc.Node().addComponent(cc.Sprite);\n        this.face = new cc.Node().addComponent(cc.Sprite);\n        this.mask.node.addChild(this.back.node)\n        this.mask.node.addChild(this.face.node)\n        //添加阴影\n        this.faceMask = new cc.Node().addComponent(cc.Mask);\n        this.faceMask.type = cc.Mask.Type.IMAGE_STENCIL;        //遮罩类型设置为与牌面图相同\n        this.faceMask.alphaThreshold = 0.1;\n        this.face.node.addChild(this.faceMask.node);\n\n        this.shadow = new cc.Node().addComponent(cc.Sprite);\n        this.shadow.node.parent = this.faceMask.node;\n        this.shadow.node.setAnchorPoint(0, 0.5)\n\n        this.finger1 = new cc.Node().addComponent(cc.Sprite);\n        this.finger2 = new cc.Node().addComponent(cc.Sprite);\n        this.addChild(this.finger1.node)\n        this.addChild(this.finger2.node)\n\n        this.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\n        this.on(cc.Node.EventType.TOUCH_MOVE, this.touchMove, this);\n        this.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\n        this.on(cc.Node.EventType.TOUCH_CANCEL, this.touchCancel, this);\n\n    }\n    touchStart(event?: cc.Event.EventTouch) {\n        if (this._isOpenCard) {\n            return;\n        }\n        this._tStartPos = event.getLocation();\n    }\n    touchMove(event?: cc.Event.EventTouch) {\n        if (this._isOpenCard || !this._tStartPos) {\n            return;\n        }\n\n        let _tEndPos = event.getLocation();         //当前点\n        let _prePos = event.getPreviousLocation();  //上一个点\n        //定义 开始点到当前点的向量 为移动方向向量\n        let startToEndVec = _tEndPos.sub(this._tStartPos);\n        let preToEndVec = _tEndPos.sub(_prePos);    //移动向量\n        //规定 当移动超过 35 才确定方向 小于40是限制玩家过快的触摸\n        let length = startToEndVec.mag();\n        if (length >= 35 && length <= 40 && this._isMoveStart === false) {\n            this._isMoveStart = true;\n            this._moveDirection = startToEndVec;\n            this._rotation = this.getSignAngle(this._moveDirection, cc.v2(1, 0));\n            cc.log(\"当前旋转角度::\", this._rotation);\n            //设置外接矩形\n            let size = this.getOutRectSize(this.back.node, this._rotation);\n            this.mask.node.setContentSize(size);\n            //设置旋转角度\n            this.mask.node.rotation = this._rotation;\n            this.back.node.rotation = -this._rotation;\n            this.face.node.rotation = this._rotation;\n            this.shadow.node.rotation = -this._rotation;\n            //根据移动方向 设置牌面和阴影 移动前的起始位置\n            let quadrant = this.getQuadrant(this._moveDirection);\n            let faceVertexs = this.getNodeVertexByNodeSpaceAR(this.face.node);\n            switch (quadrant) {\n                case 1:\n                case 5:\n                    //牌面在遮罩左边\n                    this.face.node.setPosition(-this.mask.node.width, this.back.node.y);\n                    //阴影设置在牌面的右下顶点\n                    this.shadow.node.setPosition(faceVertexs[2]);\n                    break;\n                case 2:\n                case 6:\n                    //牌面在遮罩右边\n                    this.face.node.setPosition(-this.mask.node.width, -this.back.node.y);\n                    //阴影设置在牌面的左下顶点\n                    this.shadow.node.setPosition(faceVertexs[3]);\n                    break;\n                case 3:\n                case 7:\n                    //牌面在遮罩右边\n                    this.face.node.setPosition(-this.mask.node.width, -this.back.node.y);\n                    //阴影设置在牌面的左上顶点\n                    this.shadow.node.setPosition(faceVertexs[0]);\n                    break;\n                case 4:\n                case 8:\n                    //牌面在遮罩左边\n                    this.face.node.setPosition(-this.mask.node.width, this.back.node.y);\n                    //阴影设置在牌面的右上顶点\n                    this.shadow.node.setPosition(faceVertexs[1]);\n                    break;\n                default:\n                    cc.error(\"移动的方向向量为cc.Vec2(0, 0)\");\n                    this._isMoveStart = false;\n                    break;\n            }\n\n        }\n        else if (this._isMoveStart) {\n            //移动向量在方向向量上的分量\n            let unitV = preToEndVec.project(this._moveDirection);\n            let _unitV = unitV.neg();   //反向移动向量\n            //移动\n            this.moveByVec2(this.mask.node, unitV, 2);\n            this.moveByVec2(this.back.node, _unitV, 2);\n            this.moveByVec2(this.face.node, unitV, 2);\n            this.moveByVec2(this.shadow.node, _unitV, 2);\n            //显示手指\n            let vertexs = this.getNodeVertexByWorldSpaceAR(this.face.node, -20);\n            let maskPolygon = this.getNodeVertexByWorldSpaceAR(this.mask.node);\n            //判断顶点是否落在多边形内\n            let length = 0;\n            for (let i = 0; i < vertexs.length; i++) {\n                //判断当前手指是否已经被此顶点使用\n                let finger = this._infinger[i];\n                //判断顶点是否落在遮罩内\n                if (cc.Intersection.pointInPolygon(vertexs[i], maskPolygon)) {\n                    if (!finger) {\n                        if (length >= 2) {\n                            //游戏结束\n                            this._isOpenCard = true;\n                            this.touchEnd();\n                        }\n                        else if (!this.finger1.node.active) {\n                            this._infinger[i] = this.finger1;\n                            finger = this.finger1;\n                        }\n                        else if (!this.finger2.node.active) {\n                            this._infinger[i] = this.finger2;\n                            finger = this.finger2;\n                        }\n                    }\n                    if (finger) {\n                        length++;\n                        finger.node.active = true;\n                        finger.node.setPosition(finger.node.parent.convertToNodeSpaceAR(vertexs[i]))\n                        finger.node.rotation = -this._rotation;\n                    }\n                }\n            }\n            let localPos = this.mask.node.getPosition();\n            if (Math.abs(localPos.x) >= Math.abs(this.mask.node.width / 2) || Math.abs(localPos.y) >= Math.abs(this.mask.node.height / 2)) {\n                //开牌\n                this._isOpenCard = true;\n                this.touchEnd();\n            }\n            if (unitV.x * this._moveDirection.x < 0 && unitV.y * this._moveDirection.y < 0 && length == 0) {\n                this.touchEnd();\n                this._tStartPos = undefined;\n            }\n\n        }\n\n    }\n    touchEnd(event?: cc.Event.EventTouch) {\n        cc.log(\"搓牌结束\");\n\n        if (this._isOpenCard) {\n            this.openCard();\n            this._isOpenCard = true;    //重置状态为已经开牌\n        }\n        else {\n            this.init();\n        }\n    }\n    touchCancel() {\n\n    }\n\n    init() {\n        if (!this._cardSize) {\n            this._cardSize = this.back.node.getContentSize();\n        }\n        //总遮罩复位\n        this.mask.node.setContentSize(this._cardSize);\n        this.mask.node.setRotation(0);\n        this.mask.node.setPosition(0, 0)\n        //牌背牌面复位\n        this.back.node.setRotation(0);\n        this.back.node.setPosition(0, 0);\n        this.back.node.setContentSize(this._cardSize)\n        this.face.node.setRotation(0);\n        this.face.node.setPosition(0, 0);\n        // this.face.node.setPosition(-this._cardSize.width, -this._cardSize.height)\n        this.face.node.setPosition(-this._cardSize.width, 0)\n        this.face.node.setContentSize(this._cardSize)\n\n        //牌面遮罩复位\n        this.faceMask.node.setRotation(0);\n        this.faceMask.node.setPosition(0, 0);\n        this.faceMask.node.setContentSize(this._cardSize);\n        //阴影复位\n        this.shadow.node.setRotation(0);\n        this.shadow.node.height = this._cardSize.height * 2;  //阴影长度\n        this.shadow.node.setPosition(this.shadow.node.width, this.shadow.node.height);\n\n        this.finger1.node.active = false;\n        this.finger2.node.active = false;\n\n        this._infinger = [];        //清空手指使用列表\n\n        this._isOpenCard = false;   //改变状态 未开牌\n\n        this._isMoveStart = false;\n\n        this._rotation = 0;\n\n    }\n    setCardSize(size) {\n        this._cardSize = size;\n    }\n    setCardBack(spf: cc.SpriteFrame | string) {\n        if (typeof spf === \"string\") {\n            cc.loader.loadRes(spf, cc.SpriteFrame, (err, spf) => {\n                this.back.spriteFrame = spf;\n                if (this._cardSize) {\n                    this.back.node.setContentSize(this._cardSize)\n                }\n            })\n        }\n        else {\n            this.back.spriteFrame = spf;\n        }\n        this.back.node.setContentSize(this._cardSize)\n    }\n    setCardFace(spf: cc.SpriteFrame | string) {\n        if (typeof spf === \"string\") {\n            cc.loader.loadRes(spf, cc.SpriteFrame, (err, spf) => {\n                this.face.spriteFrame = spf;\n                this.faceMask.spriteFrame = spf;\n                if (this._cardSize) {\n                    this.face.node.setContentSize(this._cardSize)\n                    this.faceMask.node.setContentSize(this._cardSize)\n                }\n            })\n        }\n        else {\n            this.face.spriteFrame = spf;\n            this.faceMask.spriteFrame = spf;\n        }\n        this.face.node.setContentSize(this._cardSize)\n        this.faceMask.node.setContentSize(this._cardSize)\n    }\n    setShadow(spf: cc.SpriteFrame | string) {\n        if (typeof spf === \"string\") {\n            cc.loader.loadRes(spf, cc.SpriteFrame, (err, spf) => {\n                this.shadow.spriteFrame = spf;\n                if (this._cardSize) {\n                    this.shadow.node.height = this._cardSize.height * 2\n                }\n            })\n        }\n        else {\n            this.shadow.spriteFrame = spf;\n        }\n        this.shadow.node.height = this._cardSize.height * 2\n\n    }\n    setFinger(spf: cc.SpriteFrame | string, index: 1 | 2) {\n        if (typeof spf === \"string\") {\n            cc.loader.loadRes(spf, cc.SpriteFrame, (err, spf) => {\n                this[\"finger\" + index].spriteFrame = spf;\n                this[\"finger\" + index].node.setContentSize(60, 100);\n            })\n        }\n        else {\n            this[\"finger\" + index].spriteFrame = spf;\n            this[\"finger\" + index].node.setContentSize(60, 100);\n        }\n    }\n\n    openCard() {\n        this.init();\n        //显示牌面\n        this.face.node.setPosition(0, 0);\n    }\n    /**\n     * 将节点沿 unitVec 方向移动 length 个 unitVec 长度\n     *\n     * @param {cc.Node} node\n     * @param {cc.Vec2} unitVec\n     * @param {number} length\n     * @memberof PeekCardNode\n     */\n    moveByVec2(node: cc.Node, unitVec: cc.Vec2, length: number = 1) {\n        var wp = node.parent.convertToWorldSpaceAR(node.getPosition());\n        wp = cc.v2(wp.x + unitVec.x * length, wp.y + unitVec.y * length);\n        var localP = node.parent.convertToNodeSpaceAR(wp);\n        node.setPosition(localP);\n    }\n    /**\n     * 获得 v1->v2 的夹角角度(带方向)\n     * \n     * @param {cc.Vec2} v1\n     * @param {cc.Vec2} v2\n     * @memberof PeekCardNode\n     * @returns -180~180的角度\n     */\n    getSignAngle(v1: cc.Vec2, v2: cc.Vec2) {\n        var radian = v1.signAngle(v2);\n        var angle = 180 / Math.PI * radian;\n        return angle;\n    }\n    /**\n     * 获得最小外接矩形的大小\n     *\n     * @param {cc.Node} inRect 内接矩形\n     * @param {number} angle -180~180的角度\n     * @memberof PeekCardNode\n     */\n    getOutRectSize(inRect: cc.Node, angle: number) {\n        angle = Math.abs(angle);\n        if (angle > 90 && angle <= 180) {\n            angle = 180 - angle;\n        }\n\n        var radian = Math.PI / 180 * angle;\n        var size = cc.size(0, 0);\n        var w = inRect.height * Math.sin(radian) + inRect.width * Math.cos(radian);\n        var h = inRect.height * Math.cos(radian) + inRect.width * Math.sin(radian);\n        size.width = w;\n        size.height = h;\n        return size;\n    }\n\n    /**\n     * 获得节点的顶点坐标列表(基于世界坐标系)\n     * 从左上角顶点开始顺时针存入数组\n     *\n     * @param {cc.Node} node \n     * @param {number} [offset=0] 偏移量 即放大或缩放顶点围成矩形的大小\n     * @returns cc.Vec2[] 顶点数组\n     * @memberof PeekCardNode\n     */\n    getNodeVertexByWorldSpaceAR(node: cc.Node, offset: number = 0) {\n        let vertexs = this.getNodeVertexByNodeSpaceAR(node, offset);\n        for (let i = 0; i < vertexs.length; i++) {\n            vertexs[i] = node.convertToWorldSpaceAR(vertexs[i]);\n        }\n        return vertexs;\n    }\n    /**\n     * 获得节点的顶点坐标列表(基于节点坐标系)\n     * 从左上角顶点开始顺时针存入数组\n     * \n     * @param {cc.Node} node\n     * @param {number} [offset=0] 偏移量 即放大或缩放顶点围成矩形的大小\n     * @returns cc.Vec2[] 顶点数组\n     * @memberof PeekCardNode\n     */\n    getNodeVertexByNodeSpaceAR(node: cc.Node, offset: number = 0) {\n        var x = node.width / 2 + offset;\n        var y = node.height / 2 + offset;\n        let lt = cc.v2(-x, y);\n        let rt = cc.v2(x, y);\n        let rb = cc.v2(x, -y);\n        let lb = cc.v2(-x, -y);\n\n        return [lt, rt, rb, lb];\n    }\n    /**\n     * 获取坐标所在象限\n     * @returns  1 2 3 4 表示1~4象限 5x正轴 6y正轴 7x负轴 8y负轴 9原点\n     */\n    getQuadrant(vec: cc.Vec2) {\n        if (vec.x == 0 && vec.y == 0) {\n            return 9; //原点\n        } else if (vec.x == 0 && vec.y > 0) {\n            return 6 //y正轴\n        } else if (vec.x == 0 && vec.y < 0) {\n            return 8 //y负轴\n        } else if (vec.x > 0 && vec.y == 0) {\n            return 5 //x正轴\n        } else if (vec.x < 0 && vec.y == 0) {\n            return 7 //x负轴\n        } else if (vec.x > 0 && vec.y > 0) {\n            return 1 //第一象限\n        } else if (vec.x < 0 && vec.y > 0) {\n            return 2 //第二象限\n        } else if (vec.x < 0 && vec.y < 0) {\n            return 3//第三象限\n        } else if (vec.x > 0 && vec.y < 0) {\n            return 4 //第四象限\n        }\n        else {\n            cc.error(\"判断象限错误::\" + JSON.stringify(vec));\n        }\n\n        return 0;\n    }\n\n\n}\n"]}